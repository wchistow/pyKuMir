start: (code_block)?
code_block: statement ((NEWLINE | ";") statement)* (NEWLINE | ";")*
statement: store_var | declaring_var | output

NUMBER: /\d+(\.\d*)?/ | /\$[\dabcdefABCDEF]+/
STRING: /"[^".]*"/
NAME: /[A-Za-zА-Яа-я_][A-Za-zА-Яа-я_0-9]*/
OP: "+" | "-" | "*" | "/" | "**" | "=" | "<" | ">" | "," | "." | ">=" | "<=" | "<>"
COMMENT: "|" /[^\n]/*
BRACKET_OPEN: "("
BRACKET_CLOSE: ")"

TYPE: "цел" | "вещ" | "лог" | "лит" | "сим" | "цел таб" | "вещ таб" | "лог таб" | "лит таб" | "сим таб"

bin_op: expr OP expr
expr: value | bin_op | BRACKET_OPEN expr BRACKET_CLOSE

declaring_var: TYPE var_name ((":=" expr)? | ("=" value))
store_var: /[^(TYPE)NAME]/ ":=" expr
var_name: NAME ("," NAME)*
value: NUMBER | STRING | NAME

comma_exprs: expr ("," expr)*
output: "вывод" comma_exprs

%import common.WS
%import common.NEWLINE
%ignore WS
%ignore COMMENT
